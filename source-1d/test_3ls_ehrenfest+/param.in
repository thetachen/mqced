#!/usr/bin/python
from units import AtomicUnit
from utility import *
AU = AtomicUnit()


#Options:
ShowAnimation = True
AveragePeriod = 1000
UseInitialRandomPhase = False
UsePlusEmission = True
UseRandomEB = False
NumberTrajectories = 1

UseThermalRelax = True

# Set up time steps
T0 = 0.0
Tmax = 200.0/AU.fs * 100
dt = 5E-3/AU.fs * 100
times = np.arange(T0, Tmax, dt)

param_EM={
    # Z coordinate grid parameters
    'Zlim':     [-8.0/AU.nm,8.0/AU.nm],
    'NZgrid':   160*4,
    # ABC pararmeters
    'Zo':       0.0/AU.nm,
    'Z0':       6.5/AU.nm,
    'Z1':       7.5/AU.nm,
    # Continuous Wave parameters
    'A_CW':     0.01,
    'K_CW':     0.25,
}
param_EM['Zgrid'] = np.linspace(param_EM['Zlim'][0],param_EM['Zlim'][1], num=param_EM['NZgrid'])
param_EM['dZ'] = param_EM['Zgrid'][1]-param_EM['Zgrid'][0]
# start index for [Ex,Ey,Bx,By]
param_EM['_Ex'] = 0*param_EM['NZgrid']
param_EM['_Ey'] = 1*param_EM['NZgrid']
param_EM['_Bx'] = 2*param_EM['NZgrid']
param_EM['_By'] = 3*param_EM['NZgrid']
param_EM=Struct(**param_EM)

param_TLS={
    'nstates':  3,
    # Hamiltoniam
    'H0':		np.array([[0.0,0.0,0.0],\
                          [0.0,0.0625,0.0],\
                          [0.0,0.0,0.25]]),
	# Coupling
    'VP':       np.array([[0.0,0.0,1.0],\
                          [0.0,0.0,1.0],\
                          [1.0,1.0,0.0]]),
    # initial diabatic state vector
    'C0':				np.sqrt(np.array([[1.0],[0.0],[0.0]],complex)),
    # polarization
    'Mu':       0.0,
    'Sigma':    0.5,
    'Pmax':     0.025*np.sqrt(2.0),
    # thermal equilibriate
    'gamma_vib':    1E-3,
    'beta':         50.0,
}
param_TLS=Struct(**param_TLS)

phase_shift = 0.5*np.pi
